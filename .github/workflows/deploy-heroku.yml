# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Heroku Deployment

on:
  push:
    branches: [ "deploy-heroku" ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Deploy to Heroku
        uses: AkhileshNS/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}

      - name: Build with Maven
        run: mvn clean install -Dspring.profiles.active=prod

#    - name: Replace placeholders in application.properties
#      run: |
#        sed -i 's|{{DATABASE_URL}}|'"$DATABASE_URL"'|g' src/main/resources/application.properties
#
#    - name: Build and Deploy
#      run: |
#        ./mvnw clean install
#        ./mvnw heroku:deploy
#      env:
#        DATABASE_URL: ${{ secrets.DATABASE_URL }}
#
#    - name: Build with Maven
#      run: mvn clean install
#
#    - name: Run Spring Boot Application
#      run: java -jar target/cynodesu-0.0.1-SNAPSHOT.jar --spring.profiles.active=production